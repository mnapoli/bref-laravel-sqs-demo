service: laravel-sqs-demo

provider:
    name: aws
    region: us-east-1
    runtime: provided
    environment:
        APP_ENV: production
        SQS_REGION: ${self:provider.region} # Required if not using the default region
        SQS_QUEUE:
            Ref: AlertQueue
    iamRoleStatements:
        # Allows our code to interact with SQS
        -   Effect: Allow
            Action: [sqs:SendMessage, sqs:DeleteMessage]
            Resource:
                Fn::GetAtt: [ AlertQueue, Arn ]

functions:

    website:
        handler: public/index.php
        timeout: 28 # in seconds (API Gateway has a timeout of 29 seconds)
        layers:
            - ${bref:layer.php-73-fpm}
        events:
            -   http: 'ANY /'
            -   http: 'ANY /{proxy+}'

    worker:
        handler: worker.php
        layers:
            - ${bref:layer.php-73}
        events:
            -   sqs:
                    arn:
                        Fn::GetAtt: [ AlertQueue, Arn ]
                    # Only 1 item at a time to simplify error handling
                    batchSize: 1

package:
    exclude:
        - .env
        - node_modules/**
        - public/storage
        - resources/assets/**
        - storage/**
        - tests/**

plugins:
    - ./vendor/bref/bref

resources:
    Resources:

        # The queue
        AlertQueue:
            Type: AWS::SQS::Queue
            Properties:
                RedrivePolicy:
                    maxReceiveCount: 3 # jobs will be retried up to 3 times
                    # Failed jobs (after the retries) will be moved to the other queue for storage
                    deadLetterTargetArn:
                        Fn::GetAtt: [ DeadLetterQueue, Arn ]

        # Failed jobs will go into that SQS queue to be stored, until a developer looks at these errors
        DeadLetterQueue:
            Type: AWS::SQS::Queue
            Properties:
                MessageRetentionPeriod: 1209600 # maximum retention: 14 days
